name: GH Docker build and test GPU legate.core

concurrency:
  group: ci-docker-gpu-on-${{ github.event_name }}-from-${{ github.ref_name }}
  cancel-in-progress: true

on:
  push:
    branches:
      - "pull-request/[0-9]+"
      - "branch-*"

jobs:
  build-gpu:
    permissions:
      id-token: write # This is required for configure-aws-credentials
      contents: read  # This is required for actions/checkout

    runs-on: ${{ github.repository == 'nv-legate/legate.core' && 'linux-amd64-cpu4' || 'ubuntu-latest' }}
    steps:
      - name: Checkout legate.core (= this repo)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Get AWS credentials for sccache bucket
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-2
          role-duration-seconds: 28800 # 8 hours
          role-to-assume: arn:aws:iam::279114543810:role/gha-oidc-nv-legate

      - name: Build docker image
        run: |
          docker build --progress=plain --tag=legate.core -f continuous_integration/Dockerfile .

      - name: Use docker image to build legate.core
        run: |
          mkdir -p out conda-build
          docker run -v "$(pwd)/out:/tmp/out" -v "$(pwd)/conda-build:/tmp/conda-build" --rm -t legate.core /bin/bash entrypoint build-all

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: "legate.core-gpu-${{ github.sha }}"
          path: |
            conda-build
            out

  test-gpu:
    needs:
      - build-gpu
    runs-on: linux-amd64-gpu-v100-latest-1
    steps:
      - name: Run nvidia-smi to make sure GPU is working
        run: nvidia-smi

      - name: Checkout legate.core
        uses: actions/checkout@v3
        with:
          repository: nv-legate/legate.core
          fetch-depth: 0

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: "legate.core-gpu-${{ github.sha }}"
          path: artifacts

      - name: Display structure of downloaded artifacts
        run: ls -R
        working-directory: artifacts

      - name: Build docker image
        run: |
          docker build --progress=plain --tag=legate.core -f continuous_integration/Dockerfile .