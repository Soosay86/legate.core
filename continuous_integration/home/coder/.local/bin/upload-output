#!/usr/bin/env bash

upload_artifact() {
    # Variables
    local FILE_PATH="$1"
    local ARTIFACT_NAME="$2"
    local BOUNDARY=$(uuidgen)

    # Create a temporary file to store the multipart form data
    local TEMP_FILE=$(mktemp)

    # Create the multipart form data
    {
        echo "--$BOUNDARY"
        echo "Content-Disposition: form-data; name=\"file\"; filename=\"$(basename $FILE_PATH)\""
        echo "Content-Type: application/zip"
        echo
        cat "$FILE_PATH"
        echo "--$BOUNDARY--"
    } > "$TEMP_FILE"

    # Upload the file as an artifact
    curl -X POST \
        -H "Accept: application/vnd.github.v3+json" \
        -H "Authorization: Bearer $GITHUB_TOKEN" \
        -H "Content-Type: multipart/form-data; boundary=$BOUNDARY" \
        --data-binary "@$TEMP_FILE" \
        "https://uploads.github.com/repos/$REPO_OWNER/$REPO_NAME/actions/artifacts/$ARTIFACT_NAME"

    # Remove the temporary file
    rm "$TEMP_FILE"
}


upload_output() {
    set -xeuo pipefail

    local artifact_name="$1"

    # tar -czvf "${artifact_name}.tar.gz" /tmp/out /tmp/conda-build
    tar -czvf "${artifact_name}.tar.gz" ~/legate

    upload_artifact "${artifact_name}.tar.gz" "$artifact_name"
}

(upload_output "$@");